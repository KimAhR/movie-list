{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neppplus\\\\Desktop\\\\kimahreum\\\\movie-list\\\\src\\\\component\\\\movie-list\\\\Search.jsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { tmdbAxios } from \"../../api/tmdbAxios\";\nimport SearchResultItem from \"./SearchResultItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Search() {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [searchResult, setSearchResult] = useState(null);\n  const timer = useRef(null);\n  const handleQuery = e => {\n    // query 값이 바뀔 때마다 실행\n    if (timer.current) {\n      // 예약된 스케줄이 있으면 취소\n      clearTimeout(timer.current);\n    }\n    // 스케줄 취소 직후 바로 새로운 스케줄 등록\n    timer.current = setTimeout(() => {\n      setQuery(e.target.value);\n    }, 400);\n  };\n  const fetchData = useCallback(async () => {\n    if (!query) {\n      // query가 빈문자일 때는 요청하지않고 데이터 비우기\n      setSearchResult(null);\n      return;\n    }\n    let {\n      data\n    } = await tmdbAxios.get(\"search/multi\", {\n      // Query String\n      params: {\n        query: query,\n        language: \"ko-KR\"\n      }\n    });\n    setSearchResult(data.results);\n  }, [query]);\n  const navigate = useNavigate();\n  const handleLink = url => {\n    navigate(url);\n  };\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  useEffect(() => {\n    console.log(searchResult);\n  }, [searchResult]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      onChange: handleQuery,\n      onBlur: () => {\n        setTimeout(() => {\n          setSearchResult(null);\n        }, 200);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResultList, {\n      children: searchResult === null || searchResult === void 0 ? void 0 : searchResult.map(data => /*#__PURE__*/_jsxDEV(SearchResultItem, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"DKkiZ61MzFIlqTEMBcxx7LVWgLg=\", false, function () {\n  return [useNavigate];\n});\n_c = Search;\nconst Container = styled.div`\n  position: relative;\n`;\n_c2 = Container;\nconst Input = styled.input`\n  border: 1px solid #ccc;\n  padding: 5px;\n  outline: none;\n`;\n_c3 = Input;\nconst ResultList = styled.ul`\n  position: absolute;\n  width: 100%;\n  border: 1px solid #ccc;\n  border-top: none;\n`;\n_c4 = ResultList;\nexport default Search;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Search\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Input\");\n$RefreshReg$(_c4, \"ResultList\");","map":{"version":3,"names":["useCallback","useEffect","useRef","useState","useNavigate","styled","tmdbAxios","SearchResultItem","Search","query","setQuery","searchResult","setSearchResult","timer","handleQuery","e","current","clearTimeout","setTimeout","target","value","fetchData","data","get","params","language","results","navigate","handleLink","url","console","log","map","Container","div","Input","input","ResultList","ul"],"sources":["C:/Users/Neppplus/Desktop/kimahreum/movie-list/src/component/movie-list/Search.jsx"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { tmdbAxios } from \"../../api/tmdbAxios\";\r\nimport SearchResultItem from \"./SearchResultItem\";\r\n\r\nfunction Search() {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState(null);\r\n  const timer = useRef(null);\r\n\r\n  const handleQuery = (e) => {\r\n    // query 값이 바뀔 때마다 실행\r\n    if (timer.current) {\r\n      // 예약된 스케줄이 있으면 취소\r\n      clearTimeout(timer.current);\r\n    }\r\n    // 스케줄 취소 직후 바로 새로운 스케줄 등록\r\n    timer.current = setTimeout(() => {\r\n      setQuery(e.target.value);\r\n    }, 400);\r\n  };\r\n\r\n  const fetchData = useCallback(async () => {\r\n    if (!query) {\r\n      // query가 빈문자일 때는 요청하지않고 데이터 비우기\r\n      setSearchResult(null);\r\n      return;\r\n    }\r\n    let { data } = await tmdbAxios.get(\"search/multi\", {\r\n      // Query String\r\n      params: {\r\n        query: query,\r\n        language: \"ko-KR\",\r\n      },\r\n    });\r\n\r\n    setSearchResult(data.results);\r\n  }, [query]);\r\n\r\n  const navigate = useNavigate();\r\n  const handleLink = (url) => {\r\n    navigate(url);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  useEffect(() => {\r\n    console.log(searchResult);\r\n  }, [searchResult]);\r\n\r\n  return (\r\n    <Container>\r\n      {/* onBlur : input에서 커서가 사라졌을 때 */}\r\n      <Input\r\n        type=\"text\"\r\n        onChange={handleQuery}\r\n        onBlur={() => {\r\n          setTimeout(() => {\r\n            setSearchResult(null);\r\n          }, 200);\r\n        }}\r\n      />\r\n      <ResultList>\r\n        {searchResult?.map((data) => (\r\n          <SearchResultItem data={data} />\r\n        ))}\r\n      </ResultList>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  border: 1px solid #ccc;\r\n  padding: 5px;\r\n  outline: none;\r\n`;\r\n\r\nconst ResultList = styled.ul`\r\n  position: absolute;\r\n  width: 100%;\r\n  border: 1px solid #ccc;\r\n  border-top: none;\r\n`;\r\n\r\nexport default Search;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}