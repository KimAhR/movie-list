{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neppplus\\\\Desktop\\\\kimahreum\\\\movie-list\\\\src\\\\component\\\\movie_list\\\\MovieDetail.jsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { tmdbAxios } from \"../../api/tmdbAxios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieDetail() {\n  _s();\n  const {\n    pathname\n  } = useLocation();\n  const [movie, setMovie] = useState(null);\n\n  // movie가 null일 경우 {} 객체 비구조화 할당하므로 오류 발생 x\n  const {\n    title,\n    overview,\n    poster_path,\n    backdrop_path,\n    release_date\n  } = movie !== null && movie !== void 0 ? movie : {};\n  const url = \"https://image.tmdb.org/t/p/w300\" + poster_path;\n  const backdrop_url = \"https://image.tmdb.org/t/p/original\" + backdrop_path;\n  const fetchData = useCallback(async () => {\n    const {\n      data\n    } = await tmdbAxios.get(pathname, {\n      // params 옵션을 통해서 여러개의 쿼리를 쉽게 붙일 수 있다.\n      params: {\n        language: \"ko-KR\" //? lagnuage=ko-KR\n      }\n    });\n\n    setMovie(data);\n  }, [pathname]);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  if (!movie) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uB85C\\uB529\\uC911...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    backdrop_url: backdrop_url,\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(ImgBox, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: url,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContentBox, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: [title, /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"(\", release_date.substr(0, 4), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SummaryBox, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uAC1C\\uC694\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: overview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieDetail, \"EoEfn546U6BLT5Pvm36Mbrm/UEA=\", false, function () {\n  return [useLocation];\n});\n_c = MovieDetail;\nconst Container = styled.div`\n  padding: 30px 0;\n\n  background: center / cover no-repeat;\n  background-image: url(${_ref => {\n  let {\n    backdrop_url\n  } = _ref;\n  return backdrop_url;\n}});\n  background-color: rgba(0, 0, 0, 0.4);\n  background-blend-mode: multiply;\n`;\n_c2 = Container;\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  max-width: 900px;\n  margin: 0 auto;\n`;\n_c3 = Wrapper;\nconst ImgBox = styled.div``;\n_c4 = ImgBox;\nconst ContentBox = styled.div`\n  margin-left: 20px;\n  color: #fff;\n`;\n_c5 = ContentBox;\nconst Title = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 700;\n\n  span {\n    font-size: 1.2rem;\n    font-weight: 500;\n  }\n`;\n_c6 = Title;\nconst SummaryBox = styled.div`\n  margin-top: 50px;\n  h4 {\n    font-size: 1.2rem;\n    font-weight: 700;\n    margin-bottom: 10px;\n  }\n`;\n_c7 = SummaryBox;\nexport default MovieDetail;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"MovieDetail\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Wrapper\");\n$RefreshReg$(_c4, \"ImgBox\");\n$RefreshReg$(_c5, \"ContentBox\");\n$RefreshReg$(_c6, \"Title\");\n$RefreshReg$(_c7, \"SummaryBox\");","map":{"version":3,"names":["useCallback","useEffect","useState","useLocation","styled","tmdbAxios","MovieDetail","pathname","movie","setMovie","title","overview","poster_path","backdrop_path","release_date","url","backdrop_url","fetchData","data","get","params","language","substr","Container","div","Wrapper","ImgBox","ContentBox","Title","h2","SummaryBox"],"sources":["C:/Users/Neppplus/Desktop/kimahreum/movie-list/src/component/movie_list/MovieDetail.jsx"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { tmdbAxios } from \"../../api/tmdbAxios\";\r\n\r\nfunction MovieDetail() {\r\n  const { pathname } = useLocation();\r\n  const [movie, setMovie] = useState(null);\r\n\r\n  // movie가 null일 경우 {} 객체 비구조화 할당하므로 오류 발생 x\r\n  const { title, overview, poster_path, backdrop_path, release_date } =\r\n    movie ?? {};\r\n  const url = \"https://image.tmdb.org/t/p/w300\" + poster_path;\r\n  const backdrop_url = \"https://image.tmdb.org/t/p/original\" + backdrop_path;\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const { data } = await tmdbAxios.get(pathname, {\r\n      // params 옵션을 통해서 여러개의 쿼리를 쉽게 붙일 수 있다.\r\n      params: {\r\n        language: \"ko-KR\", //? lagnuage=ko-KR\r\n      },\r\n    });\r\n\r\n    setMovie(data);\r\n  }, [pathname]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  if (!movie) return <div>로딩중...</div>;\r\n\r\n  return (\r\n    <Container backdrop_url={backdrop_url}>\r\n      <Wrapper>\r\n        <ImgBox>\r\n          <img src={url} alt=\"\" />\r\n        </ImgBox>\r\n        <ContentBox>\r\n          <Title>\r\n            {title}\r\n            {/* 문자열. substr(시작인덱스, 길이): 시작인덱스부터 길이만큼 자른다. */}\r\n            <span>({release_date.substr(0, 4)})</span>\r\n          </Title>\r\n          <SummaryBox>\r\n            <h4>개요</h4>\r\n            <p>{overview}</p>\r\n          </SummaryBox>\r\n        </ContentBox>\r\n      </Wrapper>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  padding: 30px 0;\r\n\r\n  background: center / cover no-repeat;\r\n  background-image: url(${({ backdrop_url }) => backdrop_url});\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n  background-blend-mode: multiply;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  max-width: 900px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst ImgBox = styled.div``;\r\n\r\nconst ContentBox = styled.div`\r\n  margin-left: 20px;\r\n  color: #fff;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n\r\n  span {\r\n    font-size: 1.2rem;\r\n    font-weight: 500;\r\n  }\r\n`;\r\n\r\nconst SummaryBox = styled.div`\r\n  margin-top: 50px;\r\n  h4 {\r\n    font-size: 1.2rem;\r\n    font-weight: 700;\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nexport default MovieDetail;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}