{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neppplus\\\\Desktop\\\\kimahreum\\\\movie-list\\\\src\\\\component\\\\practice-router\\\\PostEdit.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostEdit() {\n  _s();\n  //경로에서 Query String 값을 쉽게 가져올 수 있다.\n  const [searchParams] = useSearchParams();\n  const postId = searchParams.get(\"postId\");\n  const [inputs, setInputs] = useState({\n    title: \"\",\n    body: \"\"\n  });\n  const navigate = useNavigate();\n  const handleInputs = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setInputs({\n      ...inputs,\n      [name]: value\n    });\n  };\n  const handleSubmit = async () => {\n    const url = `http://localhost:5000/posts/${postId || \"\"}`;\n    console.log(url);\n    let result = await axios.post(\"http://localhost:5000/posts\", {\n      title: inputs.title,\n      body: inputs.body\n    });\n    navigate(\"/post/\" + result.data.id);\n  };\n  useEffect(() => {\n    if (postId) {\n      axios.get(\"http://localhost:5000/posts/\" + postId).then(res => {\n        console.log(res);\n        const {\n          data\n        } = res;\n        setInputs({\n          title: data.title,\n          body: data.body\n        });\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\uC81C\\uBAA9 :\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          onChange: handleInputs,\n          value: inputs.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\uB0B4\\uC6A9 :\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"body\",\n          onChange: handleInputs,\n          value: inputs.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"\\uB4F1\\uB85D\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(PostEdit, \"dmknWMuZs4BqoxYmQyYJ6Z8dihQ=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = PostEdit;\nexport default PostEdit;\nvar _c;\n$RefreshReg$(_c, \"PostEdit\");","map":{"version":3,"names":["axios","useEffect","useState","useNavigate","useSearchParams","PostEdit","searchParams","postId","get","inputs","setInputs","title","body","navigate","handleInputs","e","value","name","target","handleSubmit","url","console","log","result","post","data","id","then","res"],"sources":["C:/Users/Neppplus/Desktop/kimahreum/movie-list/src/component/practice-router/PostEdit.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\n\r\nfunction PostEdit() {\r\n  //경로에서 Query String 값을 쉽게 가져올 수 있다.\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const postId = searchParams.get(\"postId\");\r\n\r\n  const [inputs, setInputs] = useState({\r\n    title: \"\",\r\n    body: \"\",\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleInputs = (e) => {\r\n    const { value, name } = e.target;\r\n    setInputs({\r\n      ...inputs,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    const url = `http://localhost:5000/posts/${postId || \"\"}`;\r\n\r\n    console.log(url);\r\n\r\n    let result = await axios.post(\"http://localhost:5000/posts\", {\r\n      title: inputs.title,\r\n      body: inputs.body,\r\n    });\r\n\r\n    navigate(\"/post/\" + result.data.id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (postId) {\r\n      axios.get(\"http://localhost:5000/posts/\" + postId).then((res) => {\r\n        console.log(res);\r\n        const { data } = res;\r\n        setInputs({ title: data.title, body: data.body });\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <label>\r\n          제목 :\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            onChange={handleInputs}\r\n            value={inputs.title}\r\n          />\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label>\r\n          내용 :\r\n          <input\r\n            type=\"text\"\r\n            name=\"body\"\r\n            onChange={handleInputs}\r\n            value={inputs.body}\r\n          />\r\n        </label>\r\n      </div>\r\n      <button onClick={handleSubmit}>등록하기</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostEdit;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,eAAe,QAAQ,kBAAkB;AAAC;AAEhE,SAASC,QAAQ,GAAG;EAAA;EAClB;EACA,MAAM,CAACC,YAAY,CAAC,GAAGF,eAAe,EAAE;EAExC,MAAMG,MAAM,GAAGD,YAAY,CAACE,GAAG,CAAC,QAAQ,CAAC;EAEzC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC;IACnCS,KAAK,EAAE,EAAE;IACTC,IAAI,EAAE;EACR,CAAC,CAAC;EAEF,MAAMC,QAAQ,GAAGV,WAAW,EAAE;EAE9B,MAAMW,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,KAAK;MAAEC;IAAK,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCR,SAAS,CAAC;MACR,GAAGD,MAAM;MACT,CAACQ,IAAI,GAAGD;IACV,CAAC,CAAC;EACJ,CAAC;EAED,MAAMG,YAAY,GAAG,YAAY;IAC/B,MAAMC,GAAG,GAAI,+BAA8Bb,MAAM,IAAI,EAAG,EAAC;IAEzDc,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAEhB,IAAIG,MAAM,GAAG,MAAMvB,KAAK,CAACwB,IAAI,CAAC,6BAA6B,EAAE;MAC3Db,KAAK,EAAEF,MAAM,CAACE,KAAK;MACnBC,IAAI,EAAEH,MAAM,CAACG;IACf,CAAC,CAAC;IAEFC,QAAQ,CAAC,QAAQ,GAAGU,MAAM,CAACE,IAAI,CAACC,EAAE,CAAC;EACrC,CAAC;EAEDzB,SAAS,CAAC,MAAM;IACd,IAAIM,MAAM,EAAE;MACVP,KAAK,CAACQ,GAAG,CAAC,8BAA8B,GAAGD,MAAM,CAAC,CAACoB,IAAI,CAAEC,GAAG,IAAK;QAC/DP,OAAO,CAACC,GAAG,CAACM,GAAG,CAAC;QAChB,MAAM;UAAEH;QAAK,CAAC,GAAGG,GAAG;QACpBlB,SAAS,CAAC;UAAEC,KAAK,EAAEc,IAAI,CAACd,KAAK;UAAEC,IAAI,EAAEa,IAAI,CAACb;QAAK,CAAC,CAAC;MACnD,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,wBACE;MAAA,uBACE;QAAA,WAAO,gBAEL;UACE,IAAI,EAAC,MAAM;UACX,IAAI,EAAC,OAAO;UACZ,QAAQ,EAAEE,YAAa;UACvB,KAAK,EAAEL,MAAM,CAACE;QAAM;UAAA;UAAA;UAAA;QAAA,QACpB;MAAA;QAAA;QAAA;QAAA;MAAA;IACI;MAAA;MAAA;MAAA;IAAA,QACJ,eACN;MAAA,uBACE;QAAA,WAAO,gBAEL;UACE,IAAI,EAAC,MAAM;UACX,IAAI,EAAC,MAAM;UACX,QAAQ,EAAEG,YAAa;UACvB,KAAK,EAAEL,MAAM,CAACG;QAAK;UAAA;UAAA;UAAA;QAAA,QACnB;MAAA;QAAA;QAAA;QAAA;MAAA;IACI;MAAA;MAAA;MAAA;IAAA,QACJ,eACN;MAAQ,OAAO,EAAEO,YAAa;MAAA,UAAC;IAAI;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACxC;AAEV;AAAC,GAvEQd,QAAQ;EAAA,QAEQD,eAAe,EASrBD,WAAW;AAAA;AAAA,KAXrBE,QAAQ;AAyEjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}