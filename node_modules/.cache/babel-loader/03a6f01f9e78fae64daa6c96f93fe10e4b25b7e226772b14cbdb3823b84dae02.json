{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neppplus\\\\Desktop\\\\kimahreum\\\\movie-list\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState(null);\n  const [text, setText] = useState(\"\");\n  const handleText = e => {\n    setText(e.target.value);\n  };\n  const fetchData = async () => {\n    //acync/await : async 함수 내부에서 Promise 앞에 await 붙이면\n    //resolve될 때까지 다음 코드를 실행하지 않는다. => 동기적으로 처리\n    try {\n      let result = await axios.get(\"http://localhost:5000/todos\");\n      setTodos(result.data);\n    } catch (e) {\n      setTodos(null);\n    }\n  };\n  useEffect(() => {\n    //화면에 나타나자마자 한번만 실행.\n    fetchData();\n  }, []);\n\n  // const handleSubmit = () => {\n  //   axios\n  //     .post(\"http://localhost:5000/todos\", {\n  //       text: text,\n  //       done: false,\n  //     })\n  //     .then((res) => {\n  //       // 등록에 성공하면 데이터 다시 받아오기\n  //       // if(res.)\n  //       console.log(res);\n  //       if (res.status === 201) alert(\"할일이 등록되었습니다.\");\n  //       fetchData();\n  //     });\n  // };\n\n  const handleSubmit = async () => {\n    let result = await axios.post(\"http://localhost:5000/todos\", {\n      text: text,\n      done: false\n    });\n    //등록에 성공하면 데이터 다시 받아오기\n    // if(res.)\n    console.log(result);\n    if (result.status === 201) alert(\"할일이 등록되었습니다.\");\n    fetchData();\n  };\n  const handleToggle = async (id, done) => {\n    await axios.patch(\"http://localhost:5000/todos/\" + id, {\n      done\n    });\n    fetchData();\n  };\n\n  // const handleRemove = (id) => {\n  //   axios.delete(\"http://localhost:5000/todos/\" + id).then((res) => {\n  //     fetchData();\n  //   });\n  // };\n\n  const handleRemove = async id => {\n    try {\n      await axios.delete(\"http://localhost:5000/todos/\" + id);\n      fetchData();\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  //화면에 나타나자마자 한번만 실행.\n\n  if (!todos) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uB370\\uC774\\uD130\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 22\n  }, this);\n  console.log(todos);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: handleText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"\\uB4F1\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          textDecoration: todo.done && \"line-through\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => handleToggle(todo.id, !todo.done),\n          children: todo.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemove(todo.id),\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"p0bqByUryxKo8tkqAb8ixqawCmg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","useEffect","useState","App","todos","setTodos","text","setText","handleText","e","target","value","fetchData","result","get","data","handleSubmit","post","done","console","log","status","alert","handleToggle","id","patch","handleRemove","delete","map","todo","textDecoration"],"sources":["C:/Users/Neppplus/Desktop/kimahreum/movie-list/src/App.js"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [todos, setTodos] = useState(null);\n  const [text, setText] = useState(\"\");\n\n  const handleText = (e) => {\n    setText(e.target.value);\n  };\n\n  const fetchData = async () => {\n    //acync/await : async 함수 내부에서 Promise 앞에 await 붙이면\n    //resolve될 때까지 다음 코드를 실행하지 않는다. => 동기적으로 처리\n    try {\n      let result = await axios.get(\"http://localhost:5000/todos\");\n      setTodos(result.data);\n    } catch (e) {\n      setTodos(null);\n    }\n  };\n\n  useEffect(() => {\n    //화면에 나타나자마자 한번만 실행.\n    fetchData();\n  }, []);\n\n  // const handleSubmit = () => {\n  //   axios\n  //     .post(\"http://localhost:5000/todos\", {\n  //       text: text,\n  //       done: false,\n  //     })\n  //     .then((res) => {\n  //       // 등록에 성공하면 데이터 다시 받아오기\n  //       // if(res.)\n  //       console.log(res);\n  //       if (res.status === 201) alert(\"할일이 등록되었습니다.\");\n  //       fetchData();\n  //     });\n  // };\n\n  const handleSubmit = async () => {\n    let result = await axios.post(\"http://localhost:5000/todos\", {\n      text: text,\n      done: false,\n    });\n    //등록에 성공하면 데이터 다시 받아오기\n    // if(res.)\n    console.log(result);\n    if (result.status === 201) alert(\"할일이 등록되었습니다.\");\n    fetchData();\n  };\n\n  const handleToggle = async (id, done) => {\n    await axios.patch(\"http://localhost:5000/todos/\" + id, {\n      done,\n    });\n    fetchData();\n  };\n\n  // const handleRemove = (id) => {\n  //   axios.delete(\"http://localhost:5000/todos/\" + id).then((res) => {\n  //     fetchData();\n  //   });\n  // };\n\n  const handleRemove = async (id) => {\n    try {\n      await axios.delete(\"http://localhost:5000/todos/\" + id);\n      fetchData();\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  //화면에 나타나자마자 한번만 실행.\n\n  if (!todos) return <div>데이터가 없습니다.</div>;\n\n  console.log(todos);\n\n  return (\n    <div>\n      <div>\n        <input type=\"text\" onChange={handleText} />\n        <button onClick={handleSubmit}>등록</button>\n      </div>\n      <ul>\n        {todos.map((todo) => (\n          <li\n            key={todo.id}\n            style={{ textDecoration: todo.done && \"line-through\" }}\n          >\n            <span onClick={() => handleToggle(todo.id, !todo.done)}>\n              {todo.text}\n            </span>\n            <button onClick={() => handleRemove(todo.id)}>삭제</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAE5C,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMM,UAAU,GAAIC,CAAC,IAAK;IACxBF,OAAO,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMC,SAAS,GAAG,YAAY;IAC5B;IACA;IACA,IAAI;MACF,IAAIC,MAAM,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,6BAA6B,CAAC;MAC3DT,QAAQ,CAACQ,MAAM,CAACE,IAAI,CAAC;IACvB,CAAC,CAAC,OAAON,CAAC,EAAE;MACVJ,QAAQ,CAAC,IAAI,CAAC;IAChB;EACF,CAAC;EAEDJ,SAAS,CAAC,MAAM;IACd;IACAW,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMI,YAAY,GAAG,YAAY;IAC/B,IAAIH,MAAM,GAAG,MAAMb,KAAK,CAACiB,IAAI,CAAC,6BAA6B,EAAE;MAC3DX,IAAI,EAAEA,IAAI;MACVY,IAAI,EAAE;IACR,CAAC,CAAC;IACF;IACA;IACAC,OAAO,CAACC,GAAG,CAACP,MAAM,CAAC;IACnB,IAAIA,MAAM,CAACQ,MAAM,KAAK,GAAG,EAAEC,KAAK,CAAC,cAAc,CAAC;IAChDV,SAAS,EAAE;EACb,CAAC;EAED,MAAMW,YAAY,GAAG,OAAOC,EAAE,EAAEN,IAAI,KAAK;IACvC,MAAMlB,KAAK,CAACyB,KAAK,CAAC,8BAA8B,GAAGD,EAAE,EAAE;MACrDN;IACF,CAAC,CAAC;IACFN,SAAS,EAAE;EACb,CAAC;;EAED;EACA;EACA;EACA;EACA;;EAEA,MAAMc,YAAY,GAAG,MAAOF,EAAE,IAAK;IACjC,IAAI;MACF,MAAMxB,KAAK,CAAC2B,MAAM,CAAC,8BAA8B,GAAGH,EAAE,CAAC;MACvDZ,SAAS,EAAE;IACb,CAAC,CAAC,OAAOH,CAAC,EAAE;MACVU,OAAO,CAACC,GAAG,CAACX,CAAC,CAAC;IAChB;EACF,CAAC;;EAED;;EAEA,IAAI,CAACL,KAAK,EAAE,oBAAO;IAAA,UAAK;EAAU;IAAA;IAAA;IAAA;EAAA,QAAM;EAExCe,OAAO,CAACC,GAAG,CAAChB,KAAK,CAAC;EAElB,oBACE;IAAA,wBACE;MAAA,wBACE;QAAO,IAAI,EAAC,MAAM;QAAC,QAAQ,EAAEI;MAAW;QAAA;QAAA;QAAA;MAAA,QAAG,eAC3C;QAAQ,OAAO,EAAEQ,YAAa;QAAA,UAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACtC,eACN;MAAA,UACGZ,KAAK,CAACwB,GAAG,CAAEC,IAAI,iBACd;QAEE,KAAK,EAAE;UAAEC,cAAc,EAAED,IAAI,CAACX,IAAI,IAAI;QAAe,CAAE;QAAA,wBAEvD;UAAM,OAAO,EAAE,MAAMK,YAAY,CAACM,IAAI,CAACL,EAAE,EAAE,CAACK,IAAI,CAACX,IAAI,CAAE;UAAA,UACpDW,IAAI,CAACvB;QAAI;UAAA;UAAA;UAAA;QAAA,QACL,eACP;UAAQ,OAAO,EAAE,MAAMoB,YAAY,CAACG,IAAI,CAACL,EAAE,CAAE;UAAA,UAAC;QAAE;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA,GANpDK,IAAI,CAACL,EAAE;QAAA;QAAA;QAAA;MAAA,QAQf;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEV;AAAC,GApGQrB,GAAG;AAAA,KAAHA,GAAG;AAsGZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}